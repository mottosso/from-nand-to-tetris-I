// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */



CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    	// Setup 8 registers
     	Register(in=in, load=load1, out=reg1);
     	Register(in=in, load=load2, out=reg2);
     	Register(in=in, load=load3, out=reg3);
     	Register(in=in, load=load4, out=reg4);
     	Register(in=in, load=load5, out=reg5);
     	Register(in=in, load=load6, out=reg6);
     	Register(in=in, load=load7, out=reg7);
     	Register(in=in, load=load8, out=reg8);

    	// Pick a register based on the current address
    	Mux8Way16(a=reg1, b=reg2, c=reg3, d=reg4,
    			  e=reg5, f=reg6, g=reg7, h=reg8, sel=address, out=out);

    	// Load register, but only if:
    	//   (1) the load-bit is set
    	//   (2) the register corresponds to the current address
    	DMux8Way(in=load, sel=address, a=load1,
    								   b=load2,
    								   c=load3,
    								   d=load4,
    								   e=load5,
    								   f=load6,
    								   g=load7,
    								   h=load8);

}