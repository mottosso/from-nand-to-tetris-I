// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    	// Setup RAM
    	RAM64(in=in, load=load1, address=address[0..5], out=ram1);
    	RAM64(in=in, load=load2, address=address[0..5], out=ram2);
    	RAM64(in=in, load=load3, address=address[0..5], out=ram3);
    	RAM64(in=in, load=load4, address=address[0..5], out=ram4);
    	RAM64(in=in, load=load5, address=address[0..5], out=ram5);
    	RAM64(in=in, load=load6, address=address[0..5], out=ram6);
    	RAM64(in=in, load=load7, address=address[0..5], out=ram7);
    	RAM64(in=in, load=load8, address=address[0..5], out=ram8);

    	// Pick a RAM based on the current address
    	Mux8Way16(a=ram1, b=ram2, c=ram3, d=ram4,
    			  e=ram5, f=ram6, g=ram7, h=ram8, sel=address[6..8], out=out);

    	// Load RAM, but only if:
    	//   (1) the load-bit is set
    	//   (2) the RAM corresponds to the current address
    	DMux8Way(in=load, sel=address[6..8], a=load1,
    								         b=load2,
    								         c=load3,
    								         d=load4,
    								         e=load5,
    								         f=load6,
    								         g=load7,
    								         h=load8);

}