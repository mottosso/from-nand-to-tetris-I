// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    	// Setup RAM
    	RAM4K(in=in, load=load1, address=address[0..11], out=ram1);
    	RAM4K(in=in, load=load2, address=address[0..11], out=ram2);
    	RAM4K(in=in, load=load3, address=address[0..11], out=ram3);
    	RAM4K(in=in, load=load4, address=address[0..11], out=ram4);

    	// Pick a RAM based on the current address
    	Mux4Way16(a=ram1, b=ram2, c=ram3, d=ram4, sel=address[12..13], out=out);

    	// Load RAM, but only if:
    	//   (1) the load-bit is set
    	//   (2) the RAM corresponds to the current address
    	DMux4Way(in=load, sel=address[12..13], a=load1,
    								           b=load2,
    								           c=load3,
    								           d=load4);

}
